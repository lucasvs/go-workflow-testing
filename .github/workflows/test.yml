name: Test API with PostgreSQL

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U testuser -d testdb"
          --health-timeout=30s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.22'

      - name: Install dependencies
        run: |
          go mod tidy
          go mod vendor

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U testuser; do
            echo "Waiting for database to be ready..."
            sleep 2
          done

      - name: Set DB_URL environment variable
        run: echo "DB_URL=postgres://testuser:testpassword@localhost:5432/testdb?sslmode=disable" >> $GITHUB_ENV

      - name: Run API server in the background
        run: |
          go run main.go &
        env:
          DB_URL: postgres://testuser:testpassword@localhost:5432/testdb?sslmode=disable

      - name: Wait for API to be ready
        run: |
          echo "Waiting for API to start..."
          until curl --silent --fail http://localhost:8080/health; do
            echo "Waiting for server to be ready..."
            sleep 2
          done

      - name: Run tests
        run: |
          go test ./tests/api_test.go -v

      - name: Clean up
        run: kill $(lsof -t -i:8080) || true